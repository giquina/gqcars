# =============================================================================
# MCP ENVIRONMENT CONFIGURATION TEMPLATE
# =============================================================================
# Copy this file to .env and fill in your actual values
# This template includes all environment variables needed for the comprehensive MCP setup

# =============================================================================
# EXISTING WORKING MCPs
# =============================================================================

# Notion Integration
NOTION_API_KEY=secret_your_notion_api_key_here
NOTION_DATABASE_ID=your_notion_database_id_here

# Exa Web Search
EXA_API_KEY=your_exa_api_key_here

# GitHub Integration
GITHUB_PERSONAL_ACCESS_TOKEN=ghp_your_github_token_here
GITHUB_ORGANIZATION=your_github_organization_name
GITHUB_WEBHOOK_SECRET=your_github_webhook_secret
GITHUB_APP_ID=your_github_app_id
GITHUB_PRIVATE_KEY=your_github_private_key

# Docker Configuration
DOCKER_HOST=unix:///var/run/docker.sock
DOCKER_REGISTRY=docker.io
DOCKER_REGISTRY_USERNAME=your_docker_username
DOCKER_REGISTRY_PASSWORD=your_docker_password

# Playwright Configuration (Enhanced for GQ Cars)
PLAYWRIGHT_HEADLESS=false
PLAYWRIGHT_BROWSER=chromium
PLAYWRIGHT_TIMEOUT=30000
PLAYWRIGHT_VIEWPORT_WIDTH=1920
PLAYWRIGHT_VIEWPORT_HEIGHT=1080

# =============================================================================
# ESSENTIAL DEVELOPMENT MCPs
# =============================================================================

# Filesystem MCP
MCP_FILESYSTEM_ALLOWED_DIRS=/mnt/c/Users/Student/Documents,/mnt/c/Users/Student/Desktop,/mnt/c/Users/Student/Downloads

# Context7 MCP
CONTEXT7_API_KEY=your_context7_api_key_here
CONTEXT7_WORKSPACE_ID=your_context7_workspace_id

# Memory MCP
MEMORY_BANK_SIZE=1000
MEMORY_PERSISTENCE=true

# Git Configuration
GIT_AUTHOR_NAME=Your Name
GIT_AUTHOR_EMAIL=your.email@example.com

# NPM Configuration
NPM_REGISTRY=https://registry.npmjs.org

# =============================================================================
# DATABASE MCPs
# =============================================================================

# PostgreSQL Configuration
POSTGRES_CONNECTION_STRING=postgresql://username:password@localhost:5432/database
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=your_database_name
POSTGRES_USER=your_postgres_user
POSTGRES_PASSWORD=your_postgres_password

# SQLite Configuration
SQLITE_DATABASE_PATH=./dev.db
SQLITE_ALLOWED_OPERATIONS=read,write,create,update,delete

# =============================================================================
# GOOGLE WORKSPACE MCPs
# =============================================================================

# Google Cloud Credentials
GOOGLE_APPLICATION_CREDENTIALS=/path/to/your/service-account-key.json
GOOGLE_CLIENT_ID=your_google_client_id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your_google_client_secret

# Google Drive
GOOGLE_DRIVE_API_KEY=your_google_drive_api_key

# Google Sheets
GOOGLE_SHEETS_API_KEY=your_google_sheets_api_key

# Google Docs
GOOGLE_DOCS_API_KEY=your_google_docs_api_key

# Google Calendar
GOOGLE_CALENDAR_API_KEY=your_google_calendar_api_key

# Gmail
GMAIL_API_KEY=your_gmail_api_key

# =============================================================================
# COMMUNICATION & PRODUCTIVITY MCPs
# =============================================================================

# Slack Integration
SLACK_BOT_TOKEN=xoxb-your-slack-bot-token
SLACK_SIGNING_SECRET=your_slack_signing_secret
SLACK_APP_TOKEN=xapp-your-slack-app-token

# Linear Integration
LINEAR_API_KEY=lin_api_your_linear_api_key
LINEAR_TEAM_ID=your_linear_team_id

# Trello Integration
TRELLO_API_KEY=your_trello_api_key
TRELLO_TOKEN=your_trello_token

# Email Configuration (SMTP/IMAP)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@example.com
SMTP_PASS=your_email_password
IMAP_HOST=imap.gmail.com
IMAP_PORT=993
IMAP_USER=your_email@example.com
IMAP_PASS=your_email_password

# =============================================================================
# UTILITY MCPs
# =============================================================================

# Time Configuration
TIMEZONE=UTC
DATE_FORMAT=ISO8601

# PDF Processing
PDF_MAX_SIZE=10MB
PDF_ALLOWED_DIRS=/mnt/c/Users/Student/Documents,/mnt/c/Users/Student/Desktop,/mnt/c/Users/Student/Downloads

# Image Processing
IMAGE_MAX_SIZE=5MB
IMAGE_ALLOWED_FORMATS=jpg,jpeg,png,gif,bmp,webp
IMAGE_ALLOWED_DIRS=/mnt/c/Users/Student/Documents,/mnt/c/Users/Student/Desktop,/mnt/c/Users/Student/Downloads

# Translation Service
TRANSLATE_API_KEY=your_translation_api_key
TRANSLATE_SERVICE=google
DEFAULT_SOURCE_LANG=auto
DEFAULT_TARGET_LANG=en

# Weather Service
WEATHER_API_KEY=your_openweathermap_api_key
WEATHER_SERVICE=openweathermap
DEFAULT_LOCATION=London,UK

# =============================================================================
# ADVANCED DEVELOPMENT MCPs
# =============================================================================

# Supabase Configuration
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_ANON_KEY=your_supabase_anon_key
SUPABASE_SERVICE_KEY=your_supabase_service_key

# Vercel Configuration
VERCEL_TOKEN=your_vercel_token
VERCEL_TEAM_ID=your_vercel_team_id

# Stripe Configuration
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
STRIPE_WEBHOOK_SECRET=whsec_your_stripe_webhook_secret

# Firebase Configuration
FIREBASE_PROJECT_ID=your_firebase_project_id
FIREBASE_PRIVATE_KEY=your_firebase_private_key
FIREBASE_CLIENT_EMAIL=your_firebase_client_email

# =============================================================================
# SPECIALIZED MCPs
# =============================================================================

# AWS Configuration
AWS_ACCESS_KEY_ID=your_aws_access_key_id
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
AWS_DEFAULT_REGION=us-east-1

# Kubernetes Configuration
KUBECONFIG=~/.kube/config
KUBERNETES_NAMESPACE=default

# Monitoring Configuration
MONITORING_ENDPOINT=https://your-monitoring-service.com
MONITORING_API_KEY=your_monitoring_api_key
ALERT_WEBHOOK=https://your-alert-webhook.com

# Analytics Configuration
ANALYTICS_API_KEY=your_analytics_api_key
ANALYTICS_PROPERTY_ID=your_analytics_property_id
ANALYTICS_SERVICE=google

# =============================================================================
# SECURITY & COMPLIANCE MCPs
# =============================================================================

# Security Scanning
SECURITY_SCAN_ENABLED=true
SECURITY_REPORT_WEBHOOK=https://your-security-webhook.com
SECURITY_SCAN_DIRS=/mnt/c/Users/Student/Documents,/mnt/c/Users/Student/Desktop

# Secrets Management
SECRETS_VAULT_URL=https://your-vault-instance.com
SECRETS_VAULT_TOKEN=your_vault_token
SECRETS_ENCRYPTION_KEY=your_encryption_key

# =============================================================================
# TESTING & AUTOMATION MCPs
# =============================================================================

# Testing Configuration
TEST_FRAMEWORK=jest
TEST_COVERAGE_THRESHOLD=80
TEST_RESULTS_WEBHOOK=https://your-test-results-webhook.com

# CI/CD Configuration
CI_PROVIDER=github
CI_TOKEN=your_ci_token
CD_WEBHOOK=https://your-deployment-webhook.com

# =============================================================================
# REAL-TIME & STREAMING MCPs
# =============================================================================

# WebSocket Configuration
WEBSOCKET_PORT=8080
WEBSOCKET_SECURE=true
WEBSOCKET_ORIGINS=*

# Streaming Configuration
STREAMING_BUFFER_SIZE=1024
STREAMING_TIMEOUT=30000

# =============================================================================
# GQ CARS SPECIFIC MCPs
# =============================================================================

# Next.js Configuration
NEXTJS_PROJECT_DIR=/mnt/c/Users/Student/Documents/Development_Projects/gqcars-main-production/apps/web
NEXTJS_PORT=3000
NEXTJS_BUILD_COMMAND=npm run build
NEXTJS_DEV_COMMAND=npm run dev

# Tailwind CSS Configuration
TAILWIND_CONFIG_PATH=/mnt/c/Users/Student/Documents/Development_Projects/gqcars-main-production/apps/web/tailwind.config.js
TAILWIND_CSS_PATH=/mnt/c/Users/Student/Documents/Development_Projects/gqcars-main-production/apps/web/src/styles/globals.css
TAILWIND_WATCH=true

# Prisma Configuration
PRISMA_SCHEMA_PATH=/mnt/c/Users/Student/Documents/Development_Projects/gqcars-main-production/apps/web/prisma/schema.prisma
PRISMA_AUTO_MIGRATE=true
PRISMA_GENERATE_CLIENT=true

# Enhanced Stripe Configuration for GQ Cars
STRIPE_WEBHOOK_ENDPOINT=/api/webhooks/stripe
STRIPE_SUCCESS_URL=http://localhost:3000/booking/success
STRIPE_CANCEL_URL=http://localhost:3000/booking/cancel

# =============================================================================
# CURSOR IDE INTEGRATION
# =============================================================================

# Cursor Integration
CURSOR_WORKSPACE=/mnt/c/Users/Student/Documents/Development_Projects/gqcars-main-production
SYNC_INTERVAL=1000
SYNC_ENABLED=true

# =============================================================================
# SYSTEM CONFIGURATION
# =============================================================================

# Node.js Configuration
NODE_ENV=development
NODE_OPTIONS=--max-old-space-size=4096

# Path Configuration
PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin

# Debug Configuration
DEBUG=mcp:*
LOG_LEVEL=info

# =============================================================================
# SECURITY NOTES
# =============================================================================
# 1. Never commit this file with real values to version control
# 2. Use environment-specific .env files (.env.local, .env.prod, etc.)
# 3. Consider using a secrets management service for production
# 4. Regularly rotate API keys and tokens
# 5. Use least-privilege access for all integrations
# 6. Monitor usage and set up alerts for unusual activity

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
# 1. Copy this file to .env: cp mcp-env-template.env .env
# 2. Fill in your actual API keys and tokens
# 3. Test each MCP individually before enabling all
# 4. Run the installation script: .\install-mcps.ps1
# 5. Verify configuration: .\test-mcps.ps1

# =============================================================================
# TROUBLESHOOTING
# =============================================================================
# If you encounter issues:
# 1. Check that all required environment variables are set
# 2. Verify API keys and tokens are valid
# 3. Ensure all dependencies are installed
# 4. Check the MCP server logs for error messages
# 5. Refer to the troubleshooting guide: troubleshooting.md